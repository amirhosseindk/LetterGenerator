// <auto-generated />
using System;
using LetterGenerator.Letter.Contracts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LetterGenerator.Letter.Migrations
{
    [DbContext(typeof(LetterDbContext))]
    [Migration("20250331132449_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("LetterGenerator.Letter.Models.Letter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Copy")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTimeLocal")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedDateTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HaveCopy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("InsertDateTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDateTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RecipientName")
                        .HasColumnType("TEXT");

                    b.Property<string>("RecipientPosition")
                        .HasColumnType("TEXT");

                    b.Property<string>("SenderName")
                        .HasColumnType("TEXT");

                    b.Property<string>("SenderPosition")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Letters");
                });

            modelBuilder.Entity("LetterGenerator.Letter.Models.LetterSyncStatus", b =>
                {
                    b.Property<Guid>("LetterId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.Property<int>("DeviceType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSynced")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastCheckedDateTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("SyncType")
                        .HasColumnType("INTEGER");

                    b.HasKey("LetterId", "Username", "DeviceType");

                    b.ToTable("LetterSyncStatuses");
                });

            modelBuilder.Entity("LetterGenerator.Letter.Models.LetterSyncStatus", b =>
                {
                    b.HasOne("LetterGenerator.Letter.Models.Letter", "Letter")
                        .WithMany()
                        .HasForeignKey("LetterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Letter");
                });
#pragma warning restore 612, 618
        }
    }
}
